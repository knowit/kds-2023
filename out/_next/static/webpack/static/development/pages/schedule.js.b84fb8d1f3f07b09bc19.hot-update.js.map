{"version":3,"file":"static/webpack/static/development/pages/schedule.js.b84fb8d1f3f07b09bc19.hot-update.js","sources":["webpack:///./pages/components/Talk.tsx"],"sourcesContent":["import '../../styling/talkStyles.scss';\nimport FilterTag from './FilterTag';\nimport Difficulty from './Difficulty';\nimport dynamic from \"next/dynamic\";\nimport Pin from './Pin';\nimport React from 'react';\nimport {colorClassFromRoomName} from '../../helpers/colors';\n\nconst FavouriteTalkButtonNoSSR = dynamic(() => import(\"./FavouriteTalkButton\"), {\n    ssr: false\n});\n\n\nclass Talk extends React.Component<any, any> {\n    render() {\n        return (\n            <div className=\"talk\">\n                <div className=\"header\">\n                    <div className=\"time\">\n                        <div className=\"wrapper\">\n                            <img src=\"../../static/clock.svg\" width=\"24\" height=\"24\"/>\n                        </div>\n                        <span className=\"time-text\">\n                        <span className=\"time-text-day\">{this.props.day}<br/></span>\n                            {this.props.timeStart && this.props.timeStart.toString()} - {this.props.timeEnd && this.props.timeEnd.toString()}\n                        </span>\n                    </div>\n                    <div className=\"room\">\n                        <div className=\"wrapper\">\n                            <Pin className={colorClassFromRoomName(this.props.room)}/>\n                        </div>\n                        <span className=\"text room-name\">\n                            {this.props.room}\n                        </span>\n                    </div>\n                    <div className=\"diff\">\n                        <div className=\"wrapper\">\n                            <Difficulty difficulty={this.props.difficulty}/>\n                        </div>\n                        <span className=\"text diff-name\">\n                          {this.props.difficulty}\n                        </span>\n                    </div>\n                    <div className=\"heart\">\n                        <FavouriteTalkButtonNoSSR talkId={this.props.id} onClick={this.props.onFavoriteChange}/>\n                    </div>\n                </div>\n                <div className=\"talk-content\">\n                    <p className=\"day\">{this.props.day}</p>\n                    <p className=\"time-info\">{this.props.timeStart && this.props.timeStart.toString()} - {this.props.timeEnd && this.props.timeEnd.toString()}\n                        <span className=\"duration\">\n                          &nbsp;({this.props.timeEnd && this.props.timeStart && this.props.timeStart.diff(this.props.timeEnd)} min)\n                        </span>\n                    </p>\n                    <p className=\"type-info\">{this.props.type}\n                        <span className=\"duration\">\n                          &nbsp;({this.props.timeEnd && this.props.timeStart && this.props.timeStart.diff(this.props.timeEnd)} min)\n                        </span>\n                    </p>\n                    <h1 className=\"title\">{this.props.title}</h1>\n                    {this.props.speaker && this.props.speaker.map(speaker => {\n                        return (<div>\n                            <p className=\"speaker\">{speaker.name}</p>\n                            <p className=\"info\">{speaker.info}</p>\n                        </div>)\n                    })}\n                    <div className=\"tags\">\n                        {(this.props.tags && this.props.language) && this.props.tags.concat([this.props.language]).map(tag =>\n                            <FilterTag\n                                key={tag} name={tag} selected={this.props.selectedTags.indexOf(tag) > -1}\n                                onClick={() => this.props.onToggleTag(tag)}/>)}\n                    </div>\n                    <hr className=\"seperator\"/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Talk;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;;;;;;;;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA/DA;AACA;AAiEA;;;;A","sourceRoot":""}